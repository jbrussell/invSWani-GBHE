implicit real*4 (a-h--o-z)
c
include 'parameter.h'
               
integer*4
 nqknot --maximum number of knots in the Q-model
parameter (nqknot = 20)
                
real*8
 temp (nknot)--  function to integrate
 t-- result of integration
 dr(nknot) --difference in radii between successive knots
c
real*4
 u-- U
 up-- partial of U w.r.t r (U dot)
 v-- V
 vp-- partial of V w.r.t r (V dot)
 phi-- phi
 phip-- partial of phi w.r.t r (phi dot)
 wl-- W
 wp-- partial of W w.r.t r (W dot)
 w-- eigenfrequency (omega)
 wmin-- minimum eigenfrequency
 wmax --maximum eigenfrequency
c
real*4
 ff-- equivalent to W&D's "F" (p.351) 
       (different normalizations: ff = r * F)
 mm-- equivalent to W&D's "Ms" 
       (equations 90 & 102) (different normalizations)
 mmbar-- equivalent to W&D's "Ms twiddle" 
       (equations 91 & 103) (different normalizations)
 kk-- equivalent to W&D's "Ks" (equation 100) 
       (different normalizations)
 kkbar-- equivalent to W&D's "Ks twiddle" 
       (equation 101) (different normalizations)
 rr-- equivalent to B&G's "R'" in equation 48 
       (different normalizations)
 rr1-- equivalent to first term in B&G's "R'" in 
       equation 48 (different normalizations)
 rr2-- equivalent to second term in B&G's "R'" in 
       equation 48 (different normalizations)
 rr3-- equivalent to third term in B&G's "R'" in 
       equation 48 (different normalizations)
 rr4-- equivalent to fourth term in B&G's "R'" in 
       equation 48 (different normalizations)
 qq-- Q
 mvs--   mm * beta
 xcc, xaa, xff, xll, xnn -- anistropic kernal terms from A&D, 
       appendix 1.  xcc = "C twiddle", etc.
c
real*4
 abuf(maxbyte)-- line of data read from eigenfunction file
 stuff(4)-- information in branch file-- not used 
 intg(nknot,7)-- array of output kernels--dimensioned to 7 for 
                anisotropy, isotropy will only use four
 disc (maxdisc)-- perturbation in discontinuity information
 discsv --perturbation in discontinuity information from 
          center_of_the_earth-side (-) of the discontinuity
                                                 
real*4
 rad(nknot)-- radius from eigenfunction file
 radius(nknot)-- radius used to create kernels
 rn-- radius of the earth
 rj-- radius at knot, j
 rm-- rj / rn     
 rl-- radii index
c
real*4
 bigg-- universal gravitational constant, G
 rhobar-- average density of the earth
 pi-- pi
 gg (nknot)-- accelaration due to gravity, g, as a fnctn of depth
c
real*4
 bulkq (nqknot)-- Q subscript kappa (bulk modulus for Q-model)
 shearq (nqknot)-- Q subscript mu (shear modulus for Q-model)
 rq (nqknot)-- Q subscript r (radius for Q-model)
 mbq (nknot)-- slopes used to interpolate each Q subscript 
               kappa (bulk modulus for Q-model)
 bbq (nknot)-- intercepts used to interpolate each Q subscript
               kappa (bulk modulus for Q-model)
 msq (nknot)-- slopes used to interpolate each Q subscript mu
               (shear modulus for Q-model)
 bsq (nknot)-- intercepts used to interpolate each Q subscript 
               mu (shear modulus for Q-model)
c
real*4 
 kappa (nknot)-- bulk modulus from eigenfunction file
 kapq (nknot)-- Q subscript kappa (bulk modulus for Q-model) 
                interpolated at eigenfunction file's knots
 kap (nknot)-- bulk modulus from eigenfunction file divided by ro
 mu (nknot)-- shear modulus from eigenfunction file  
 muq (nknot)-- Q subscript mu (shear modulus for q-model) 
                interpolated at eigenfunction file's knots
c
real*4
 dn(nknot)-- density from eigenfunction file as function of depth
 alphav(nknot)--alphah(nknot), vert, hor p-wave velocities as 
                function of depth--if iso, alphav used
 betav(nknot)--betah(nknot), vert, hor s-wave velocities as 
               function of depth--if iso, betav used  
 eta(nknot)-- independent anisotropy parameter
 dnn(nknot)-- density as function of depth used to make kernels
                                      
real*4
 wgrav-- mineos parameter regarding gravity term -- not used
 tref-- mineos paramater for regarding q calculation--not used               
 q-- Q
 gv-- group velocity
 cv-- phase velocity
c
real*4
 scale-- scale  = 1.0/(rn*sqrt(rn*pi*bigg)*rhobar)
 scale2-- scale2 = sqrt(pi*bigg/rn)
 scale3-- scale3 = scale2 / scale
 third-- third  = 1.0 / 3.0
 tthird-- third  = 2.0 / 3.0
 fthird --fthird = 4.0 / 3.0
c
real*4
 f-- dummy index for angular order
 fl1(0:maxll)-- l * (l + 1.0)
 fl2(0:maxll)-- sqrt (l * (l + 1.0))
 fl3(0:maxll)-- (l - 1.0) * (l + 2.0) 
 fl4(0:maxll)-- l + 1.0
c
real*4
 interple -- (function) given the coefficients for linear interpolation 
              this routine calculates y for an input x
            
integer*4 
 nn-- n (radial order)
 ni-- l (radial order) index
 ll-- l (angular order)
 li-- l (angular order) index
 im-- mode index
 nnmin-- minimum value for n (radial order) in branch file
 nnmax-- maximum value for n (radial order) in branch file
 llmin-- minimum value for l (angular order) in branch file
 llmax-- maximum value for l (angular order) in branch file
 lmin-- minimum value for l (angular order) in eigenfunction file
 lmax-- maximum value for l (angular order) in eigenfunction file
 nnb(0:maxl,nbranch)-- values of n (radial order) for each mode 
                       within each branch
 llb(0:maxl,nbranch)-- values of l (angular order) for each mode 
                       within each branch
 numb(nbranch)-- number of modes within each branch
c
integer*4 
 old(0:maxl--0:maxn),
 kntdsc (maxdisc)-- contains the value of the knot corresponding to
           the center_of_the_earth-side (-) of every discontinuity
                                          
integer*4
 ifirst-- index counting number of times through loop
 knot-- index corresponding to radii where model parameters are specified
 nq-- number of knots in the Q model file
 nb-- number of branches in the branch file
 ii-- branch index
 jj-- mode index within a branch
 il-- index to read information which is not used in this program
 jcom-- mode type: 1 => spheroidal; 2 => toroidal; 3 => radial
 nmodes-- number of modes contained in branch file
 ksave-- number of knots in eigenfunction file
 nic-- number of knots within the inner core
 noc-- number of knots within the inner and outer core
 nocor-- number of knots in mantle and crust (ksave - noc)
 ifanis-- ifanis = 0 => isotropic; ifanis = 1 => anisotropic
                                                                          
integer*4
 ndisc-- number of discontinuities
 dscnum-- discontinuity number

integer*4
 nvec-- number of vectors
 newvec-- new vector length                
 nrec-- number of records                
 irec-- record index
 jrec-- record index
 k1-- knot - 1
 k2-- 2 * knot
 k3-- 3 * knot
 k4-- 4 * knot
 k5-- 5 * knot
c
integer*4
 index-- used for determining record length required (index = 2 => 
        toroidal modes; index = 3 => radial or spheroidal modes)
 ic, i, j -- dummy index

logical
  lexist-- does file exist? 
  isdisc (0 : nknot)-- is there a discontinuity at this knot? 
               (If TRUE, then (this knot + 1) has the same radii.
  force-- FORCE FRECHET TO COMPUTE ANISOTROPIC PARTIALS !!!!!
c
character*40 fmt
character*256
 q_file-- Q file
 m_file-- mode file (eigenfunction file)
 o_file-- output file
 b_file-- branch file
c
common/ablk/nn,ll,w,q,gv,buf(nknot6)
equivalence(nn,abuf)
c
data pi/3.14159265350/
data rn/6371000.0/
data bigg /6.6732e-11/
data rhobar/5515.0/
c
data force/.true./ -- IF WANT TO FORCE ANISOTROPIC PARTIALS TO BE CALC'ed
c
